função dir() -> exibe todos métodos disponíveis no script no modo interativo.
função help() -> entra no modo ajuda do python e é possível conseguir informações de classes.
em python se usa letras maiúsculas para definir que uma variável é do tipo constante

em python o padrão é o snake case: exemplo: nome_da_rua, diferente de java que é camelcase: nomeDaRua

a função print, tem como parâmetro padrão: sep='<algum separador' e end='\n' 
esses argumentos permitem add um separador diferente e pular ou não uma linha. 

ex: print(nome, idade, sep="#")
>>> <nome>#<idade>

print(nome, idade, end="...")  #por padrão sep tem valor "\n"
print(variavelx)

>>> <nome><idade>...<variavelx>


---> if ternário: é uma maneira de enxugar o 'if', e guardar o resultado em uma variável.

por exemplo:
x = None
y = ''

status = 'é verdade que none é igual a vazio' if x is y else 'é falso que none é igual a vazio'

print(f'{status} é uma surpresa pra você?')

****conhecendo metodos uteis para string***

interpolação de variaveis

fateamento

join - unir 

split - dividir 


--> objetos de primeira classe: funções em python são um objeto de primeira classe pois é possível passar uma função como parâmetro de uma 
outra função, atriburir a variáveis, usá-las como valores em estrutura de dados e usar como valor de retorno para uma função


***** Docstring*****

A primeira string depois do cabeçalho da função é chamada de docstring, é uma string usada para especificar a funcionalidade da nossa função, 
e embora seja opcional, vos lembro que documentar é uma importante prática de programação, uma vez que possivelmente outras pessoas estarão 
lendo nosso código, inclusive é importante até mesmo para você lembrar o que você fez!

Caso queiramos ver o docstring de uma função, podemos acessar o atributo __doc__:

print(padrao.__doc__) # Função que apenas imprime um valor

usando doctring com uma função criada: 

def imc(peso_kg, altura_em_metros):
    """ essa função calcula o imc de acordo com o peso"""
    return (peso_kg/altura_em_metros**2)


meu_imc = imc(100, 1.85)
print(meu_imc)
help(imc)